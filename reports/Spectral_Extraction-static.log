Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
psf_wavelengths = np.linspace(wavelength[0], wavelength[-1], num=10) * 1.0e-6 # wavelengths must be in meters

cube_hdul = instrument.calc_datacube(psf_wavelengths) #the output is a HDUList
psf_cube = cube_hdul[1].data
psf_cube.shape
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[36], line 3[0m
[1;32m      1[0m psf_wavelengths [38;5;241m=[39m np[38;5;241m.[39mlinspace(wavelength[[38;5;241m0[39m], wavelength[[38;5;241m-[39m[38;5;241m1[39m], num[38;5;241m=[39m[38;5;241m10[39m) [38;5;241m*[39m [38;5;241m1.0e-6[39m [38;5;66;03m# wavelengths must be in meters[39;00m
[0;32m----> 3[0m cube_hdul [38;5;241m=[39m [43minstrument[49m[38;5;241;43m.[39;49m[43mcalc_datacube[49m[43m([49m[43mpsf_wavelengths[49m[43m)[49m [38;5;66;03m#the output is a HDUList[39;00m
[1;32m      4[0m psf_cube [38;5;241m=[39m cube_hdul[[38;5;241m1[39m][38;5;241m.[39mdata
[1;32m      5[0m psf_cube[38;5;241m.[39mshape

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/poppy/instrument.py:324[0m, in [0;36mInstrument.calc_datacube[0;34m(self, wavelengths, *args, **kwargs)[0m
[1;32m    322[0m [38;5;66;03m# Set up cube and initialize structure based on PSF at first wavelength[39;00m
[1;32m    323[0m poppy_core[38;5;241m.[39m_log[38;5;241m.[39minfo([38;5;124m"[39m[38;5;124mStarting multiwavelength data cube calculation.[39m[38;5;124m"[39m)
[0;32m--> 324[0m psf [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcalc_psf[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[43mmonochromatic[49m[38;5;241;43m=[39;49m[43mwavelengths[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    325[0m [38;5;28;01mfrom[39;00m [38;5;21;01mcopy[39;00m [38;5;28;01mimport[39;00m deepcopy
[1;32m    326[0m cube [38;5;241m=[39m deepcopy(psf)

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/webbpsf/webbpsf_core.py:1047[0m, in [0;36mJWInstrument.calc_psf[0;34m(self, outfile, source, nlambda, monochromatic, fov_arcsec, fov_pixels, oversample, detector_oversample, fft_oversample, overwrite, display, save_intermediates, return_intermediates, normalize, add_distortion, crop_psf)[0m
[1;32m   1044[0m         [38;5;28mself[39m[38;5;241m.[39mpupil[38;5;241m.[39mupdate_opd()
[1;32m   1046[0m [38;5;66;03m# Run poppy calc_psf[39;00m
[0;32m-> 1047[0m psf [38;5;241m=[39m [43mSpaceTelescopeInstrument[49m[38;5;241;43m.[39;49m[43mcalc_psf[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43moutfile[49m[38;5;241;43m=[39;49m[43moutfile[49m[43m,[49m[43m [49m[43msource[49m[38;5;241;43m=[39;49m[43msource[49m[43m,[49m[43m [49m[43mnlambda[49m[38;5;241;43m=[39;49m[43mnlambda[49m[43m,[49m
[1;32m   1048[0m [43m                                        [49m[43mmonochromatic[49m[38;5;241;43m=[39;49m[43mmonochromatic[49m[43m,[49m[43m [49m[43mfov_arcsec[49m[38;5;241;43m=[39;49m[43mfov_arcsec[49m[43m,[49m
[1;32m   1049[0m [43m                                        [49m[43mfov_pixels[49m[38;5;241;43m=[39;49m[43mfov_pixels[49m[43m,[49m[43m [49m[43moversample[49m[38;5;241;43m=[39;49m[43moversample[49m[43m,[49m
[1;32m   1050[0m [43m                                        [49m[43mdetector_oversample[49m[38;5;241;43m=[39;49m[43mdetector_oversample[49m[43m,[49m[43m [49m[43mfft_oversample[49m[38;5;241;43m=[39;49m[43mfft_oversample[49m[43m,[49m
[1;32m   1051[0m [43m                                        [49m[43moverwrite[49m[38;5;241;43m=[39;49m[43moverwrite[49m[43m,[49m[43m [49m[43mdisplay[49m[38;5;241;43m=[39;49m[43mdisplay[49m[43m,[49m
[1;32m   1052[0m [43m                                        [49m[43msave_intermediates[49m[38;5;241;43m=[39;49m[43msave_intermediates[49m[43m,[49m
[1;32m   1053[0m [43m                                        [49m[43mreturn_intermediates[49m[38;5;241;43m=[39;49m[43mreturn_intermediates[49m[43m,[49m[43m [49m[43mnormalize[49m[38;5;241;43m=[39;49m[43mnormalize[49m[43m)[49m
[1;32m   1055[0m [38;5;28;01mreturn[39;00m psf

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/poppy/instrument.py:277[0m, in [0;36mInstrument.calc_psf[0;34m(self, outfile, source, nlambda, monochromatic, fov_arcsec, fov_pixels, oversample, detector_oversample, fft_oversample, overwrite, display, save_intermediates, return_intermediates, normalize)[0m
[1;32m    272[0m [38;5;28mself[39m[38;5;241m.[39m_apply_jitter(result,
[1;32m    273[0m                    local_options)  [38;5;66;03m# will immediately return if there is no jitter parameter in local_options[39;00m
[1;32m    275[0m [38;5;28mself[39m[38;5;241m.[39m_get_fits_header(result, local_options)
[0;32m--> 277[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_calc_psf_format_output[49m[43m([49m[43mresult[49m[43m,[49m[43m [49m[43mlocal_options[49m[43m)[49m
[1;32m    279[0m [38;5;28;01mif[39;00m display:
[1;32m    280[0m     f [38;5;241m=[39m plt[38;5;241m.[39mgcf()

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/webbpsf/webbpsf_core.py:1108[0m, in [0;36mJWInstrument._calc_psf_format_output[0;34m(self, result, options)[0m
[1;32m   1105[0m [38;5;28;01melif[39;00m [38;5;28mself[39m[38;5;241m.[39mname [38;5;241m==[39m [38;5;124m"[39m[38;5;124mNIRSpec[39m[38;5;124m"[39m:
[1;32m   1106[0m     [38;5;66;03m# Apply distortion effects to NIRSpec psf: Distortion only[39;00m
[1;32m   1107[0m     _log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mNIRSpec: Adding optical distortion[39m[38;5;124m"[39m)
[0;32m-> 1108[0m     psf_distorted [38;5;241m=[39m [43mdistortion[49m[38;5;241;43m.[39;49m[43mapply_distortion[49m[43m([49m[43mresult[49m[43m)[49m  [38;5;66;03m# apply siaf distortion model[39;00m
[1;32m   1110[0m [38;5;66;03m# Edit the variable to match if input didn't request distortion[39;00m
[1;32m   1111[0m [38;5;66;03m# (cannot set result = psf_distorted due to return method)[39;00m
[1;32m   1112[0m [result[38;5;241m.[39mappend(fits[38;5;241m.[39mImageHDU()) [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m np[38;5;241m.[39marange([38;5;28mlen[39m(psf_distorted) [38;5;241m-[39m [38;5;28mlen[39m(result))]

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/webbpsf/distortion.py:240[0m, in [0;36mapply_distortion[0;34m(hdulist_or_filename, fill_value)[0m
[1;32m    237[0m psf[ext][38;5;241m.[39mheader[[38;5;124m"[39m[38;5;124mDISTORT[39m[38;5;124m"[39m] [38;5;241m=[39m ([38;5;124m"[39m[38;5;124mTrue[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mSIAF distortion coefficients applied[39m[38;5;124m"[39m)
[1;32m    238[0m psf[ext][38;5;241m.[39mheader[[38;5;124m"[39m[38;5;124mSIAF_VER[39m[38;5;124m"[39m] [38;5;241m=[39m (pysiaf[38;5;241m.[39mJWST_PRD_VERSION, [38;5;124m"[39m[38;5;124mSIAF PRD version used[39m[38;5;124m"[39m)
[0;32m--> 240[0m degree [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43mint[49m([38;5;28mgetattr[39m(aper, [38;5;124m'[39m[38;5;124mSci2IdlDeg[39m[38;5;124m'[39m))
[1;32m    241[0m number_of_coefficients [38;5;241m=[39m np[38;5;241m.[39mint((degree [38;5;241m+[39m [38;5;241m1[39m) [38;5;241m*[39m (degree [38;5;241m+[39m [38;5;241m2[39m) [38;5;241m/[39m [38;5;241m2[39m)
[1;32m    242[0m all_keys [38;5;241m=[39m aper[38;5;241m.[39m[38;5;18m__dict__[39m[38;5;241m.[39mkeys()

File [0;32m/usr/share/miniconda/lib/python3.9/site-packages/numpy/__init__.py:284[0m, in [0;36m__getattr__[0;34m(attr)[0m
[1;32m    281[0m     [38;5;28;01mfrom[39;00m [38;5;21;01m.[39;00m[38;5;21;01mtesting[39;00m [38;5;28;01mimport[39;00m Tester
[1;32m    282[0m     [38;5;28;01mreturn[39;00m Tester
[0;32m--> 284[0m [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m([38;5;124m"[39m[38;5;124mmodule [39m[38;5;132;01m{!r}[39;00m[38;5;124m has no attribute [39m[38;5;124m"[39m
[1;32m    285[0m                      [38;5;124m"[39m[38;5;132;01m{!r}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat([38;5;18m__name__[39m, attr))

[0;31mAttributeError[0m: module 'numpy' has no attribute 'int'
AttributeError: module 'numpy' has no attribute 'int'

